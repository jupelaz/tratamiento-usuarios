{"version":3,"sources":["serviceWorker.js","pages/Start/Start.js","utils/API.js","pages/Empleados/Empleados.js","pages/Empleado/Empleado.js","pages/Empresas/Empresas.js","pages/Empresa/Empresa.js","pages/NoMatch/NoMatch.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","message","Start","axios","id","delete","data","post","put","_id","Title","Typography","Empleados","useState","empleados","setEmpleados","isLoading","setIsLoading","editable","setEditable","claveEmpleado","setClaveEmpleado","Form","useForm","form","titleStyle","marginTop","tailLayout","wrapperCol","offset","span","useEffect","loadEmpleados","API","forEach","e","nombreCompleto","nombre","apellido1","apellido2","setFieldsValue","columns","title","dataIndex","key","render","text","record","size","type","disabled","onClick","danger","deleteEmpleado","res","style","level","dataSource","footer","labelCol","onFinish","values","fechaAlta","Date","now","toString","onFinishFailed","errorInfo","Item","name","label","rules","required","htmlType","Empleado","props","params","history","useHistory","push","to","Empresas","empresas","setEmpresas","setReload","nombreResponsable","responsable","deleteEmpresa","Option","Select","Empresa","empresa","setEmpresa","value","hasFeedback","map","resetFields","NoMatch","role","aria-label","Header","Layout","Content","Footer","App","className","theme","mode","padding","exact","path","component","textAlign","require","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd85bf51.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Start = () => (\r\n  <div/>\r\n)\r\n\r\nexport default Start","import axios from 'axios';\r\n\r\nexport default {\r\n  getAgendas: () => {\r\n    return axios.get('/api/agendas');\r\n  },\r\n  getAgenda: (id) => {\r\n    return axios.get('/api/agendas/' + id);\r\n  },\r\n  deleteAgenda: (id) => {\r\n    return axios.delete('/api/agendas/' + id);\r\n  },\r\n  saveAgenda: (data) => {\r\n    return axios.post('/api/agendas', data);\r\n  },\r\n  updateAgenda: (data) => {\r\n    return axios.put('/api/agendas/' + data._id, data);\r\n  },\r\n  getEmpleados: () => {\r\n    return axios.get('/api/empleados');\r\n  },\r\n  getEmpleado: (id) => {\r\n    return axios.get('/api/empleados/' + id);\r\n  },\r\n  deleteEmpleado: (id) => {\r\n    return axios.delete('/api/empleados/' + id);\r\n  },\r\n  saveEmpleado: (data) => {\r\n    return axios.post('/api/empleados', data);\r\n  },\r\n  updateEmpleado: (data) => {\r\n    return axios.put('/api/empleados/' + data._id, data);\r\n  },\r\n  getEmpresas: () => {\r\n    return axios.get('/api/empresas');\r\n  },\r\n  getEmpresa: (id) => {\r\n    return axios.get('/api/empresas/' + id);\r\n  },\r\n  deleteEmpresa: (id) => {\r\n    return axios.delete('/api/empresas/' + id);\r\n  },\r\n  saveEmpresa: (data) => {\r\n    return axios.post('/api/empresas', data);\r\n  },\r\n  updateEmpresa: (data) => {\r\n    return axios.put('/api/empresas/' + data._id, data);\r\n  }\r\n};","// Empleados.js\r\nimport React, { useState,useEffect } from 'react';\r\nimport API from '../../utils/API';\r\nimport { Table, Form, Input, Space, Button, Typography, Divider } from 'antd';\r\nconst { Title } = Typography;\r\n\r\nconst Empleados = () => {\r\n  const [empleados, setEmpleados] = useState(0)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [editable, setEditable]= useState(false)\r\n  const [claveEmpleado, setClaveEmpleado]= useState(0)\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const titleStyle = {\r\n    marginTop: 20\r\n  }\r\n\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  }\r\n  \r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadEmpleados()\r\n    setIsLoading(true);\r\n    API.getEmpleados()\r\n      .then(({data}) => {\r\n          data.forEach(e => e.nombreCompleto = `${e.nombre} ${e.apellido1} ${e.apellido2}`)\r\n          setEmpleados(data)\r\n        })\r\n      .catch(console.log)\r\n    if(claveEmpleado){\r\n    API.getEmpleado(claveEmpleado)\r\n          .then(({data}) => {\r\n            form.setFieldsValue(data)\r\n          })\r\n          .catch(console.log)\r\n    }else{\r\n      form.setFieldsValue({\r\n        _id: '',\r\n        nombre: '',\r\n        apellido1: '',\r\n        apellido2: ''\r\n      })\r\n    }\r\n    setIsLoading(false);\r\n  },[editable,form,claveEmpleado])\r\n\r\n  const columns = [\r\n    {\r\n      title : 'Nombre',\r\n      dataIndex: 'nombreCompleto',\r\n      key: 'nombreCompleto'\r\n    },\r\n    {\r\n      title: 'Acción',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button \r\n            type=\"primary\"\r\n            disabled={editable} \r\n            onClick={() => {\r\n              setClaveEmpleado(record._id)\r\n              setEditable(true)\r\n            }}>\r\n            Editar\r\n          </Button>\r\n          <Divider/>\r\n          <Button \r\n            type=\"primary\" \r\n            disabled={editable} \r\n            danger \r\n            onClick={() => deleteEmpleado(record._id)}>\r\n              Borrar\r\n          </Button>  \r\n        </Space>\r\n      ),\r\n    },\r\n  ]\r\n\r\n  const loadEmpleados = () => {\r\n    setIsLoading(true);\r\n    API.getEmpleados()\r\n      .then(({data}) => {\r\n        data.forEach(e => e.nombreCompleto = `${e.nombre} ${e.apellido1} ${e.apellido2}`)\r\n        setEmpleados(data)\r\n      })\r\n      .catch(console.log)\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const deleteEmpleado = (id) => {\r\n    API.deleteEmpleado(id)\r\n      .then(res => this.loadEmpleados())\r\n      .catch(console.log)\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    if(values._id){\r\n        API.updateEmpleado(values)\r\n          .then(setEditable(0))\r\n          .catch(console.log)\r\n    }else{\r\n        values.fechaAlta = Date.now().toString()\r\n        API.saveEmpleado(values)\r\n          .then(setEditable(0))\r\n          .catch(console.log)\r\n    }\r\n    console.log('Success:', values)\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    \r\n    <div >\r\n      {isLoading ? (\r\n        <div>Loading ...</div>\r\n      ) : (\r\n        <div>\r\n          <Title style={titleStyle} level={3}>Lista de empleados</Title>\r\n          <Table \r\n            columns={columns} \r\n            dataSource={empleados} \r\n            footer={() => \r\n              <Button \r\n                disabled={editable}\r\n                type=\"primary\" \r\n                onClick={() => setEditable(true)}>\r\n                Crear Empleado\r\n              </Button>\r\n            }\r\n          />\r\n          <Title style={titleStyle} level={4}>Empleado</Title>\r\n          <Form {...layout} \r\n            form={form}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item name=\"_id\"/>\r\n            <Form.Item\r\n              label=\"Nombre\"\r\n              name=\"nombre\"\r\n              rules={[{required: true, message: 'Introduzca un nombre' }]}\r\n            >\r\n              <Input disabled={!editable}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Apellido 1\"\r\n              name=\"apellido1\"\r\n              rules={[{ required: true, message: 'Introduzca el primer apellido' }]}\r\n            >\r\n              <Input disabled={!editable}/>\r\n            </Form.Item>\r\n              <Form.Item\r\n              label=\"Apellido 2\"\r\n              name=\"apellido2\"\r\n              rules={[{ required: true, message: 'Introduzca el segundo apellido' }]}\r\n            >\r\n              <Input disabled={!editable}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Space size=\"middle\">\r\n                <Button \r\n                  disabled={!editable}\r\n                  type=\"primary\" \r\n                  htmlType=\"submit\" \r\n                  >\r\n                  Guardar\r\n                </Button>\r\n                <Divider/>\r\n                <Button \r\n                  disabled={!editable}\r\n                  type=\"primary\" danger\r\n                  onClick={() => {\r\n                    setClaveEmpleado(0)\r\n                    setEditable(false)\r\n                  }}\r\n                  >\r\n                  Volver\r\n                </Button>\t\r\n              </Space>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Empleados","// Empleado.js\r\nimport React\r\n//, { useState, useEffect } \r\nfrom 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport API from '../../utils/API'\r\nimport { Space, Form, Input, Button, Typography, Divider } from 'antd'\r\nconst { Title } = Typography\r\n\r\nconst Empleado = (props) => {\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  API.getEmpleado(props.match.params.id)\r\n        .then(({data}) => {\r\n          form.setFieldsValue(data)\r\n        })\r\n        .catch(console.log)\r\n        \r\n  const history = useHistory()\r\n\r\n  //const [empleado, setEmpleado] = useState(\r\n  //   {\r\n  //   nombre: '',\r\n  //   apellido1: '',\r\n  //   apellido2: ''\r\n  // }\r\n  //)\r\n  \r\n\r\n  // useEffect(() => {\r\n  //   //loadEmpleado()\r\n  //   API.getEmpleado(props.match.params.id)\r\n  //       .then(({data}) => {\r\n  //         //setEmpleado(data)\r\n  //         form.setFieldsValue(data)\r\n  //         console.log(form.getFieldValue('_id'))\r\n  //       })\r\n  //       .catch(console.log)\r\n  // },[])\r\n  \r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  }\r\n  \r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  }\r\n  \r\n  const titleStyle = {\r\n    marginTop: 20,\r\n  }\r\n\r\n  // const loadEmpleado = () => {\r\n  //   if(props.match.params.id !== '0'){\r\n  //     API.getEmpleado(props.match.params.id)\r\n  //       .then(({data}) => {\r\n  //         setEmpleado(data)\r\n  //         form.setFieldsValue(data)\r\n  //       })\r\n  //       .catch(console.log)\r\n  //   }\r\n  // }\r\n\r\n  const onFinish = (values) => {\r\n    if(values._id){\r\n        API.updateEmpleado(values)\r\n          .then(history.push('/empleados'))\r\n          .catch(console.log)\r\n    }else{\r\n        values.fechaAlta = Date.now().toString()\r\n        API.saveEmpleado(values)\r\n          .then(history.push('/empleados'))\r\n          .catch(console.log)\r\n    }\r\n    console.log('Success:', values)\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  // const valoresInicio = () => {\r\n  //   if(props.match.params.id){\r\n  //     form.setFieldsValue({...empleado})//...empleado convierte {nombre,apellido1,apellido2} en nombre,apellido1,apellido2\r\n  //   }else{\r\n  //     form.resetFields()\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Title style={titleStyle} level={4}>\r\n        {props.match.params.id?\"Editar empleado\":\"Añadir empleado\"}\r\n        </Title>\r\n      <Form {...layout} \r\n        form={form}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item name=\"_id\"/>\r\n        <Form.Item\r\n          label=\"Nombre\"\r\n          name=\"nombre\"\r\n          //value={empleado.nombre}\r\n          rules={[{ required: true, message: 'Introduzca un nombre' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Apellido 1\"\r\n          name=\"apellido1\"\r\n          //value={empleado.apellido1}\r\n          rules={[{ required: true, message: 'Introduzca el primer apellido' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n          <Form.Item\r\n          label=\"Apellido 2\"\r\n          name=\"apellido2\"\r\n          //value={empleado.apellido2}\r\n          rules={[{ required: true, message: 'Introduzca el segundo apellido' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Space size=\"middle\">\r\n            <Button \r\n              type=\"primary\" \r\n              htmlType=\"submit\" \r\n              >\r\n              {props.match.params.id?\"Editar\":\"Crear\"}\r\n            </Button>\r\n            <Divider/>\r\n            <Button \r\n              type=\"primary\" danger\r\n              //onClick={valoresInicio}\r\n              >\r\n              Cancelar\r\n            </Button>\t\r\n          </Space>\r\n        </Form.Item>\r\n      </Form>\r\n      <Link to=\"/empleados\">← Volver a Empleados</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Empleado","// Empresas.js\r\n\r\nimport React, { useState,useEffect } from 'react';\r\nimport API from '../../utils/API';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table, Space, Button, Typography, Divider } from 'antd';\r\nconst { Title } = Typography;\r\n\r\nconst Empresas = () => {\r\n  const [empresas, setEmpresas] = useState(0)\r\n  const [reload, setReload] = useState(0)\r\n\r\n  useEffect(() => {\r\n    API.getEmpresas()\r\n    .then(res => {\r\n      res.data.forEach(e => e.nombreResponsable = `${e.responsable.nombre} ${e.responsable.apellido1} ${e.responsable.apellido2}`)\r\n      setEmpresas(res.data)\r\n      setReload(0)\r\n    })\r\n    .catch(console.log)\r\n  },[reload])\r\n\r\n  const titleStyle = {\r\n    marginTop: 20\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title : 'Nombre',\r\n      dataIndex: 'nombre',\r\n      key: 'nombre'\r\n    },\r\n    {\r\n      title : 'Responsable',\r\n      dataIndex: 'nombreResponsable',\r\n      key: 'nombreResponsable'\r\n    },\r\n    {\r\n      title: 'Acción',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"primary\">\r\n            <Link to={'/empresas/' + record._id}>Editar</Link>\r\n          </Button>\r\n          <Divider />\r\n          <Button type=\"primary\" danger onClick={() => deleteEmpresa(record._id)}>Borrar</Button>\r\n        </Space>\r\n      ),\r\n      },\r\n  ]\r\n\r\n  const deleteEmpresa = (id) => {\r\n    API.deleteEmpresa(id)\r\n      .then(setReload)\r\n      .catch(console.log)\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <Title style={titleStyle} level={3}>Lista de empresas</Title>\r\n      <Table \r\n        columns={columns} \r\n        dataSource={empresas} \r\n          footer={() => <Link to={'/empresas/0'}>Crear Empresa</Link>}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Empresas","// Empresa.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport API from '../../utils/API';\r\nimport { Space, Form, Input, Button, Typography, Divider, Select } from 'antd';\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst Empresa = (props) => {\r\n\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n\r\n  const [empresa, setEmpresa] = useState(0)\r\n  const [empleados, setEmpleados] = useState(\r\n    [\r\n      {\r\n        _id: '',\r\n        nombre: ''\r\n      }\r\n    ]\r\n  )\r\n\r\n  useEffect(() => {\r\n    API.getEmpresa(props.match.params.id)\r\n        .then(({data}) => {\r\n          setEmpresa(data)\r\n          form.setFieldsValue(data)\r\n        })\r\n        .catch(console.log)\r\n    loadEmpleados()\r\n  },[props.match.params.id, form])\r\n  \r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  \r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n  \r\n  const titleStyle = {\r\n    marginTop: 20,\r\n  }\r\n\r\n  const loadEmpleados = () => {\r\n    API.getEmpleados()\r\n      .then(({data}) => {\r\n        setEmpleados(data)\r\n      })\r\n      .catch(console.log);\r\n  }\r\n\r\n  const onFinish = ({nombre, responsable}) => {\r\n    if (nombre) {\r\n      if(empresa._id){\r\n        setEmpresa({nombre, responsable})\r\n        API.updateEmpresa(empresa)\r\n          .then(history.push('/empresas'))\r\n          .catch(console.log);\r\n      }else{\r\n        API.saveEmpresa({\r\n          nombre,\r\n          responsable,\r\n          fechaAlta: Date.now().toString()\r\n        })\r\n          .then(history.push('/empresas'))\r\n          .catch(console.log);\r\n      }\r\n    }\r\n    console.log('Success:', {nombre, responsable});\r\n  };\r\n  \r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const valoresInicio = () => {\r\n    if(empresa._id){\r\n      form.setFieldsValue({...empresa})\r\n    }else{\r\n      form.resetFields()\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Title style={titleStyle} level={4}>{empresa._id?\"Editar empresa\":\"Añadir empresa\"}</Title>\r\n      <Form {...layout} \r\n        form={form}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Nombre\"\r\n          name=\"nombre\"\r\n          value={empresa.nombre}\r\n          rules={[{ required: true, message: 'Introduzca un nombre' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Select\"\r\n          name=\"responsable\"\r\n          value={empresa.nombre}\r\n          hasFeedback\r\n          rules={[{ required: true, message: 'Selecciona un responsable' }]}\r\n        >\r\n          <Select>\r\n            {empleados.map(({_id,nombre})=> {\r\n              return (\r\n              <Option value={_id}>{nombre}</Option>\r\n              )\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Space size=\"middle\">\r\n            <Button \r\n              type=\"primary\" \r\n              htmlType=\"submit\" \r\n              >\r\n              {empresa._id?\"Editar\":\"Crear\"}\r\n            </Button>\r\n            <Divider/>\r\n            <Button \r\n              type=\"primary\" danger\r\n              onClick={valoresInicio}\r\n              >\r\n              Cancelar\r\n            </Button>\t\r\n          </Space>\r\n        </Form.Item>\r\n      </Form>\r\n      <Link to=\"/empresas\">← Volver a Empresas</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Empresa","//NoMath.js\r\nimport React from \"react\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <h1>404 Page Not Found</h1>\r\n      <h1>\r\n        <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n          🙄\r\n        </span>\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoMatch","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Start from './pages/Start';\nimport Empleados from './pages/Empleados';\nimport Empleado from './pages/Empleado';\nimport Empresas from './pages/Empresas';\nimport Empresa from './pages/Empresa';\nimport NoMatch from './pages/NoMatch';\nimport 'antd/dist/antd.min.css';\nimport { Layout, Menu } from 'antd';\nconst { Header, Content, Footer } = Layout;\n\nconst App = () => (\n  <Router>\n    <Layout className=\"layout\">\n        <Header>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item key=\"1\">\n            <a href=\"/\">Inicio</a>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <a href=\"/empleados\">Empleados</a>\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <a href=\"/empresas\"> Empresas</a>\n          </Menu.Item>\n            </Menu>\n        </Header>\n      <Content style={{ padding: '0 50px' }}>\n      <div className=\"site-layout-content\">\n        <Switch>\n          <Route exact path=\"/\" component={Start} />\n          <Route exact path=\"/empleados\" component={Empleados} />\n          <Route exact path=\"/empleados/:id\" component={Empleado} />\n          <Route exact path=\"/empresas\" component={Empresas} />\n          <Route exact path=\"/empresas/:id\" component={Empresa} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Atención a usuarios ©2020 Created by Lurconis</Footer>\n      </Layout>\n  </Router>\n);\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nconst serviceWorker = require ('./serviceWorker.js');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}